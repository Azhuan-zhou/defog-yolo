[net]
# Testing
# batch=1
# subdivisions=1
# Training
batch=64
subdivisions=16
width=416
height=416
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.001
burn_in=1000
max_batches = 500200
policy=steps
steps=400000,450000
scales=.1,.1
# cov1
[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky
# 特征图大小（416，416）


# downSampling
[convolutional]
batch_normalize=1
filters=64
size=3
stride=2
pad=1
activation=leaky
# 208，208）


# 第一个残差块*1
[convolutional]
batch_normalize=1
filters=32
size=1
stride=1
pad=1
activation=leaky
# (208,208)
[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky
# (208,208)
# 残差连接
[shortcut]
from=-3
activation=linear
# l(208,208)


# downSampling
[convolutional]
batch_normalize=1
filters=128
size=3
stride=2
pad=1
activation=leaky
# (104,104)

# 第二个残差快*1
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky
# (104,104)
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky
# (104,104)
[shortcut]
from=-3
activation=linear
# (104,104)
# 第二个残差块*2
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky
# (104,104)
[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky
# (104,104)
[shortcut]
from=-3
activation=linear
# (104,104)


# Downsample
[convolutional]
batch_normalize=1
filters=256
size=3
stride=2
pad=1
activation=leaky
# （52，52）


# 第三个残差块*1
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# （52，52）
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky
# （52，52）
[shortcut]
from=-3
activation=linear
# （52，52）
# 第三个残差块*2
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# （52，52）
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky
# （52，52）
[shortcut]
from=-3
activation=linear
# （52，52）
# 第三个残差快*3
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# （52，52）
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky
# （52，52）
[shortcut]
from=-3
activation=linear
# （52，52）
# 第三个残差块*4
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# （52，52）
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky
# （52，52）
[shortcut]
from=-3
activation=linear
# （52，52）
# 第三个残差块*5
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# （52，52）
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky
# （52，52）
[shortcut]
from=-3
activation=linear
# 第三个残差块*6
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# （52，52）
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky
# （52，52）
[shortcut]
from=-3
activation=linear
# 第三个残差块*7
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# （52，52）
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky
# （52，52）
[shortcut]
from=-3
activation=linear
# 第三个残差块*8
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# （52，52）
[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky
# （52，52）
[shortcut]
from=-3
activation=linear
# （52，52）

# Downsample
[convolutional]
batch_normalize=1
filters=512
size=3
stride=2
pad=1
activation=leaky
# （26，26）


# 第四个残差块*1
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
# （26，26）
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky
# （26，26）
[shortcut]
from=-3
activation=linear
# （26，26）
# 第四个残差块*2
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
# （26，26）
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky
# （26，26）
[shortcut]
from=-3
activation=linear
# （26，26）
# 第四个残差块*3
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
# （26，26）
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky
# （26，26）
[shortcut]
from=-3
activation=linear
# （26，26）
# 第四个残差块*4
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
# （26，26）
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky
# （26，26）
[shortcut]
from=-3
activation=linear
# （26，26）
# 第四个残差块*5
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
# （26，26）
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky
# （26，26）
[shortcut]
from=-3
activation=linear
# （26，26）
# 第四个残差块*6
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
# （26，26）
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky
# （26，26）
[shortcut]
from=-3
activation=linear
# （26，26）
# 第四个残差块*7
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
# （26，26）
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky
# （26，26）
[shortcut]
from=-3
activation=linear
# （26，26）
# 第四个残差块*8
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
# （26，26）
[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky
# （26，26）
[shortcut]
from=-3
activation=linear
# （26，26）


# Downsample
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=2
pad=1
activation=leaky
# （13，13）


# 第五个残差块*1
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky
# （13，13）
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky
# （13，13）
[shortcut]
from=-3
activation=linear
# （13，13）
# 第五个残差块*2
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky
# （13，13）
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky
# （13，13）
[shortcut]
from=-3
activation=linear
# （13，13）
# 第五个残差块*3
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky
# （13，13）
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky
# （13，13）
[shortcut]
from=-3
activation=linear
# （13，13）
# 第五个残差块*4
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky
# （13，13）
[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky
# （13，13）
[shortcut]
from=-3
activation=linear
# （13，13）
######################
# 开始计算四个特征图

# 第一个convolutional set
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky
# （13，13，512）
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky


[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky
# 第一个convolutional set 结束
# (13,13,512)
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky
#  (13,13,1024)
[convolutional]
size=1
stride=1
pad=1
filters= 30
activation=linear
# 第一个特征图计算完毕（13，13，255）
# 对第一个特征图定标签
# mask：表示只有6，7，8的锚框是该特征图的尺寸（116,90,  156,198,  373,326）
[yolo]
mask = 6,7,8
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=5
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1
stride = 32
name = large
# 回到第一个convolutional结束的地方
[route]
layers = -4
# 输入（13，13，512）
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
# （13，13，256）
# 上采样
[upsample]
stride=2
# （26，26，256）
# concatenate加上第61个conv的结果（26，26，512）
[route]
layers = -1, 61
# （26，26，768）

# 第二个convolutional set
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
# 第二个convolutional set 结束(26,26,256)
# 开始结算第二个特征图
# 输入(26,26,256)
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
# （26，26，512）
[convolutional]
size=1
stride=1
pad=1
filters= 30
activation=linear
# 得到第二个特征图（26，26，255）
# 对第二个特征图定标签
# mask：表示只有3，4，5的锚框是该特征图的尺寸（30,61,  62,45,  59,119）
[yolo]
mask = 3,4,5
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=5
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1
stride = 16
name = middle
# 回到第二个convolutional set结束时的输出（26，26，256）
[route]
layers = -4

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# （26，26，128）
# Upsampling
[upsample]
stride=2
# （52，52，128）
# concatenate与第36个卷积的输出合并（52，52，256）
[route]
layers = -1, 36
# （52，52，384）

# 第三个convolutional set
# 输入（52，52，382）
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
# 第三个convolutional set 结束 输出（52，52，128）
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
# （52，52，256）
[convolutional]
size=1
stride=1
pad=1
filters= 30
activation=linear
# 得到第三个特征图（52，52，128）
# 对第三个特征图定标签
# mask：表示只有0，1，2的锚框是该特征图的尺寸（10,13,  16,30,  33,23）
[yolo]
mask = 0,1,2
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=5
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1
stride = 8
name = small
